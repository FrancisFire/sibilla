/**
 * generated by Xtext 2.18.0.M3
 */
package quasylab.sibilla.lang.pm.model;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see quasylab.sibilla.lang.pm.model.ModelPackage
 * @generated
 */
public interface ModelFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ModelFactory eINSTANCE = quasylab.sibilla.lang.pm.model.impl.ModelFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Element</em>'.
   * @generated
   */
  Element createElement();

  /**
   * Returns a new object of class '<em>System</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>System</em>'.
   * @generated
   */
  System createSystem();

  /**
   * Returns a new object of class '<em>Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Constant</em>'.
   * @generated
   */
  Constant createConstant();

  /**
   * Returns a new object of class '<em>Macro</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Macro</em>'.
   * @generated
   */
  Macro createMacro();

  /**
   * Returns a new object of class '<em>Measure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Measure</em>'.
   * @generated
   */
  Measure createMeasure();

  /**
   * Returns a new object of class '<em>Referenceable Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Referenceable Element</em>'.
   * @generated
   */
  ReferenceableElement createReferenceableElement();

  /**
   * Returns a new object of class '<em>Species</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Species</em>'.
   * @generated
   */
  Species createSpecies();

  /**
   * Returns a new object of class '<em>Rule</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Rule</em>'.
   * @generated
   */
  Rule createRule();

  /**
   * Returns a new object of class '<em>Population</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Population</em>'.
   * @generated
   */
  Population createPopulation();

  /**
   * Returns a new object of class '<em>Multiplicity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Multiplicity</em>'.
   * @generated
   */
  Multiplicity createMultiplicity();

  /**
   * Returns a new object of class '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression</em>'.
   * @generated
   */
  Expression createExpression();

  /**
   * Returns a new object of class '<em>Relation Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Relation Operator</em>'.
   * @generated
   */
  RelationOperator createRelationOperator();

  /**
   * Returns a new object of class '<em>Mul Div Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Mul Div Operator</em>'.
   * @generated
   */
  MulDivOperator createMulDivOperator();

  /**
   * Returns a new object of class '<em>Sum Diff Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sum Diff Operator</em>'.
   * @generated
   */
  SumDiffOperator createSumDiffOperator();

  /**
   * Returns a new object of class '<em>Fraction Of</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fraction Of</em>'.
   * @generated
   */
  FractionOf createFractionOf();

  /**
   * Returns a new object of class '<em>Number Of</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Number Of</em>'.
   * @generated
   */
  NumberOf createNumberOf();

  /**
   * Returns a new object of class '<em>Num Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Num Expression</em>'.
   * @generated
   */
  NumExpression createNumExpression();

  /**
   * Returns a new object of class '<em>Or Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Or Expression</em>'.
   * @generated
   */
  OrExpression createOrExpression();

  /**
   * Returns a new object of class '<em>And Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>And Expression</em>'.
   * @generated
   */
  AndExpression createAndExpression();

  /**
   * Returns a new object of class '<em>Relation Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Relation Expression</em>'.
   * @generated
   */
  RelationExpression createRelationExpression();

  /**
   * Returns a new object of class '<em>Less Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Less Operator</em>'.
   * @generated
   */
  LessOperator createLessOperator();

  /**
   * Returns a new object of class '<em>Less Or Equal Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Less Or Equal Operator</em>'.
   * @generated
   */
  LessOrEqualOperator createLessOrEqualOperator();

  /**
   * Returns a new object of class '<em>Equal Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Equal Operator</em>'.
   * @generated
   */
  EqualOperator createEqualOperator();

  /**
   * Returns a new object of class '<em>Dis Equal Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Dis Equal Operator</em>'.
   * @generated
   */
  DisEqualOperator createDisEqualOperator();

  /**
   * Returns a new object of class '<em>Greater Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Greater Operator</em>'.
   * @generated
   */
  GreaterOperator createGreaterOperator();

  /**
   * Returns a new object of class '<em>Greater Or Equal Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Greater Or Equal Operator</em>'.
   * @generated
   */
  GreaterOrEqualOperator createGreaterOrEqualOperator();

  /**
   * Returns a new object of class '<em>Mul Div Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Mul Div Expression</em>'.
   * @generated
   */
  MulDivExpression createMulDivExpression();

  /**
   * Returns a new object of class '<em>Multiplication Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Multiplication Operator</em>'.
   * @generated
   */
  MultiplicationOperator createMultiplicationOperator();

  /**
   * Returns a new object of class '<em>Division Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Division Operator</em>'.
   * @generated
   */
  DivisionOperator createDivisionOperator();

  /**
   * Returns a new object of class '<em>Zero Division Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Zero Division Operator</em>'.
   * @generated
   */
  ZeroDivisionOperator createZeroDivisionOperator();

  /**
   * Returns a new object of class '<em>Sum Diff Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sum Diff Expression</em>'.
   * @generated
   */
  SumDiffExpression createSumDiffExpression();

  /**
   * Returns a new object of class '<em>Sum Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sum Operator</em>'.
   * @generated
   */
  SumOperator createSumOperator();

  /**
   * Returns a new object of class '<em>Difference Operator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Difference Operator</em>'.
   * @generated
   */
  DifferenceOperator createDifferenceOperator();

  /**
   * Returns a new object of class '<em>Modulo Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Modulo Expression</em>'.
   * @generated
   */
  ModuloExpression createModuloExpression();

  /**
   * Returns a new object of class '<em>True Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>True Literal</em>'.
   * @generated
   */
  TrueLiteral createTrueLiteral();

  /**
   * Returns a new object of class '<em>False Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>False Literal</em>'.
   * @generated
   */
  FalseLiteral createFalseLiteral();

  /**
   * Returns a new object of class '<em>Not Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Not Expression</em>'.
   * @generated
   */
  NotExpression createNotExpression();

  /**
   * Returns a new object of class '<em>Negation Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Negation Expression</em>'.
   * @generated
   */
  NegationExpression createNegationExpression();

  /**
   * Returns a new object of class '<em>Call Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Call Expression</em>'.
   * @generated
   */
  CallExpression createCallExpression();

  /**
   * Returns a new object of class '<em>Min Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Min Expression</em>'.
   * @generated
   */
  MinExpression createMinExpression();

  /**
   * Returns a new object of class '<em>Max Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Max Expression</em>'.
   * @generated
   */
  MaxExpression createMaxExpression();

  /**
   * Returns a new object of class '<em>If Then Else Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>If Then Else Expression</em>'.
   * @generated
   */
  IfThenElseExpression createIfThenElseExpression();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ModelPackage getModelPackage();

} //ModelFactory
